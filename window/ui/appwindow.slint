import { Button, VerticalBox, HorizontalBox, CheckBox, Slider, StandardListView, ComboBox } from "std-widgets.slint";

export component AppWindow inherits Window {
    in-out property <int> counter: 42;
    callback request-increase-value();
    callback request-decrise-value();
    callback request-set-value-100();
    callback update_counter(int, bool);
    in-out property <bool> use_slider: false;
    in-out property <int> value: 10;
    VerticalBox {
        HorizontalBox {
            Path {
                width: 100px;
                height: 100px;
                stroke: blue;
                stroke-width: 1px;
            
                MoveTo {
                    x: 0;
                    y: 0;
                }
                LineTo {
                    x: 0;
                    y: 100;
                }
                ArcTo {
                    radius-x: 1;
                    radius-y: 1;
                    x: 100;
                    y: 100;
                }
                LineTo {
                    x: 100;
                    y: 0;
                }
                Close {
                }
            }

            Text {
                text: "Counter: \{root.counter}";
                font-size: 50px;
                font-family: "Open Sans";
                color: blue;
            }
        }
        Button {
            text: "Increase value";
            clicked => {
                root.request-increase-value();
            }
        }

        Button {
            text: "Decrise value";
            clicked => {
                root.request-decrise-value();
            }
        }

        Button {
            text: "Set value to 100";
            clicked => {
                root.request-set-value-100();
            }
        }

        Image {
            source: @image-url("D:\\programowanie\\rust\\window\\pepe.jpg");
            height: 200px;
            // image-fit default is `contain` when in layout, preserving aspect ratio
        }

        TextInput {
            text: "Replace me with a name";
            selection-background-color: green;
            single-line: true;
        }

        CheckBox {
            text: "use slider";
            checked: root.use_slider; 
        }

        Slider {
            width: 200px;
            value: 42;
            changed => {
                root.update_counter(root.value, root.use_slider); // Pass both the slider value and use_slider state
            }
        }

        HorizontalBox {
            StandardListView {
                width: 150px;
                height: 150px;
                model: [ { text: "Blue"}, { text: "Red" }, { text: "Green" },
                    { text: "Yellow" }, { text: "Black"}, { text: "White"},
                    { text: "Magenta" }, { text: "Cyan" },
                ];
            }

            ComboBox {
                width: 300px;
                model: ["first", "second", "third"];
                current-value: "first";
            }
        }
    }
}
